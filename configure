#!/bin/sh
test -f mc/Name || exit 1
VERSID=`awk '{print substr($2,2)}' mc/Name`
case `uname -s` in
  Linux)   PLATID=lu; HARDID=`uname -i`; test "$HARDID" = "unknown" && HARDID=`uname -m`;;
  FreeBSD) PLATID=fb; HARDID=`uname -p`;;
  Darwin)  PLATID=md; HARDID=`uname -m`;;
  *) echo 'unknown platform - please help porting' >&2;;
esac
HARDID=${HARDID:-x86}
for MODEID in arx mc; do cd $MODEID; make -f Makefile.in clean >/dev/null 2>&1; cd ..; done
rm -rf Makefile mc/man/cat1 dist
test "$1" = "clean" && exit
DISTID=mc-$VERSID-$PLATID-$HARDID
echo "configuring for $DISTID" >&2
cat >Makefile <<EOF
ARX=\$(DESTDIR)/opt
all: dist/arx.tar.gz
	@echo 'you can now run "sudo make install"'
install: all
	-mkdir \$(ARX)
	gzip -cd <dist/arx.tar.gz | tar x -p -C \$(ARX) -f -
dist/arx.tar.gz: mc/bin/mc
	rm mc/tst/.tested
	-mkdir dist
	chmod g-s dist
	-mkdir dist/arx dist/arx/man dist/arx/man/man1
	for D in bin lib exm; do cp -r mc/\$\$D dist/arx; done
	rm dist/arx/bin/.copied
	-ln dist/arx/bin/mc dist/arx/bin/321
	for M in db2rdb mc mcunits nro; do cp mc/man/\$\$M.1 dist/arx/man/man1; done
	-strip dist/arx/bin/* 2>/dev/null
	chmod -R u+rwX,g-w,g+rX,o-w,o+rX dist
	cd dist; tar cf - arx | gzip -c >arx.tar.gz
	if [ -d archive ]; then cp dist/arx.tar.gz archive/$DISTID.tar.gz; fi
mc/bin/mc: arx/lib/libarx.a
	-mkdir mc/man/cat1
	cd mc; make -f Makefile.in init PLATID="${PLATID}"; cp Makefile.${PLATID} Makefile; make all PLATFORM="${HARDID}" PLATID="${PLATID}"
	test -f \$@
arx/lib/libarx.a:
	-mkdir arx/lib
	cd arx; make -f Makefile.in init PLATID="${PLATID}"; cp Makefile.${PLATID} Makefile; make all PLATFORM="${HARDID}"
	test -f \$@
clean:
	./configure clean
EOF
echo 'you can now run "make"' >&2
exit
