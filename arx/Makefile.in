# arx $Id: Makefile.in,v 1.99 2022/09/29 05:51:36 axel Exp $
# for: $Os

ARXREL=8
ARXVER=5

ARX=../../arx
DIRS=inc src lib

CFLAG=-I$(ARX)/inc $(DEBUG) -D__PLATFORM__='" $(PLATFORM)"'
NROFF=$Nroff
NFLAGS=$Nflag
AR=$Ar
ARFLAGS=rsv

CURSES=$Curses
LEX=$Lex
LFLAGS=$Lflag
LEXLIB=$Llib
CC=$Cc
LDFLAGS=$Ldflag
CFLAGS=$Cflag $(CURSES) $(CFLAG)
OSMISS=$Omiss
CURINC=$Curinc

all:
	for D in $(DIRS); do cd $$D; make -f ../Makefile $${D}all || break; cd ..; done

init:	Makefile.in
	bin/arxreport -t: -cMakefile Makefile.in $(PLATID) <sys.rdb

clean:
	for D in inc src; do cd $$D; make -f ../Makefile $${D}clean; cd ..; done
	rm -rf lib
	mv Makefile.in Makefile.save
	rm -f Makefile.?? Makefile
	mv Makefile.save Makefile.in

#-------------------------------------------------------------------------------
binall:	soelim
	@: echo "$@ done"

binclean:
	rm -f soelim *.o

soelim:	soelim.o
	$(CC) $(LDFLAGS) $(CFLAGS) soelim.o -o $@
	strip $@

#-------------------------------------------------------------------------------
incall:	key_def.h
	@: echo "$@ done"

key_def.h: key1_def.c key2_def.h
	$(CC) $Curses -DCURKEY2 key1_def.c -o curkey2
	./curkey2 | cat - key2_def.h >$@
	rm curkey2
#	$(CC) $Curses -E key1_def.c | sed -n 's/^YyY */#define KEY_/p' | cat - key2_def.h >$@

incclean:
	rm -f key_def.h

#-------------------------------------------------------------------------------
srcall:	libarx_.a libarxc_.a dbrecall
	@: echo "$@ done"

srcclean:
	rm -f libarx*_.a which cur_goll lib_dir dbrecall *.o

libarx_.a:	lib_akey.o lib_2iee.o lib_mesg.o \
	lib_freo.o lib_twpo.o lib_path.o lib_stat.o lib_fsiz.o lib_mktm.o \
	str_gets.o str_trim.o str_tlen.o str_repl.o str_upr.o str_chkd.o str_inc.o str_abbr.o \
	rdb_open.o rdb_crea.o rdb_clos.o rdb_read.o rdb_writ.o rdb_2dbf.o \
	dbf_open.o dbf_crea.o dbf_clos.o dbf_read.o dbf_writ.o dbf_2rdb.o \
	dbf_from.o dbf_info.o dbf_afix.o \
	utf82iso885915.o \
	sql_crea.o sql_writ.o sql_crep.o sql_wrip.o sql_wrio.o yml_crea.o yml_writ.o \
	$(OSMISS)
	$(AR) $(ARFLAGS) $@ $? >/dev/null 2>&1
	ranlib $@

dbrecall: dbrecall.c
	cc -I../inc -O0 -g dbrecall.c -o dbrecall

utf82iso885915.o: utf82iso885915.c oem2iso.h

libarxc_.a:	\
	cur_init.o cur_exit.o cur_getk.o cur_gets.o cur_satt.o \
	cur_syst.o cur_goll.o cur_rest.o cur_fixt.o cur_gmnu.o
	$(AR) $(ARFLAGS) $@ $? >/dev/null 2>&1
	ranlib $@

which:	lib_path.c
	$(CC) $(LDFLAGS) $(CFLAGS) -DTEST lib_path.c -o $@

lib_dir:	lib_dirs.c
	$(CC) $(LDFLAGS) $(CFLAGS) -DTEST lib_dirs.c -o $@

cur_goll:	cur_goll.c cur_rest.o cur_fixt.o
	$(CC) $(LDFLAGS) $(CFLAGS) -DTEST cur_goll.c cur_rest.o cur_fixt.o \
		-lcurses -o $@

lib_akey.o:	lib_akey.c ../inc/arx_def.h
	$(CC) $(CFLAGS) -DARXREL='"$(ARXREL)"' -DARXVER='"$(ARXVER)"' \
		"`if [ "$Sys" = "gs" ]; then echo -DOSINFO='"'$Os'"'; else echo -UOSINFO; fi`" \
		-c lib_akey.c

#-------------------------------------------------------------------------------
liball:	libarx.a libarxc.a
	@: echo "$@ done"

libarx.a:	../src/libarx_.a
	cp ../src/libarx_.a $@

libarxc.a:	../src/libarxc_.a
	cp ../src/libarxc_.a $@

libclean:
	rm -f libarx*.a
